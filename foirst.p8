pico-8 cartridge // http://www.pico-8.com
version 21
__lua__

function _init()
    print("init")
    -- player
    pl = make_actor(1,2,2)
    pl.frames=0

    a = make_actor(2,3,3)
    a = make_actor(2,3,4)
    a = make_actor(2,3,5)
    a = make_actor(2,3,6)
    a.frames = 0
    -- make_player()
end

function _update()
    ctrl_player(pl)
    foreach(actors, move_actor)
end

function draw_actor(a)
    local sx = (a.x * 8) - 4
    local sy = (a.y * 8) - 4
    spr(a.sn --[[ + a.frame ]], sx, sy)
end

found_col = false

function _draw()
    cls()
    map()
    print("found_col? = "..tostring(found_col))
    print("length"..tostring(#actors))
    foreach(actors, draw_actor)
    -- map(0, 0, 0, 0, 128, 32)
    -- print(mget(player.x/8,player.y/8))
    -- print(pl.x .. " " .. pl.y, pl.x - 6, pl.y - 6)
    -- -- this is how you draw a map
end

actors = {}

-- sn: sprite_number
-- x,y: middle of sprite
function make_actor(sn, x, y)
    a={
        sn = sn,
        x = x,
        y = y,
        dx = 0,
        dy = 0,
        frame = 0,
        friction = 0.15,
        bounce = 0.8,
        frames = 2,
        w = 0.4,
        h = 0.4
    }
    add(actors, a)
    return a
end

function ctrl_player(pl)
    accel = 0.05
    if (btn(0)) then pl.dx -= accel end --left
    if (btn(1)) then pl.dx += accel end --right
    if (btn(2)) then pl.dy -= accel end --up
    if (btn(3)) then pl.dy += accel end --down
end

function move_actor(a)
    if not solid_a(a, a.dx, 0) then
        a.x += a.dx
    else
        a.dx *= -a.bounce
    end

    if not solid_a(a, 0, a.dy) then
        a.y += a.dy
    else
        a.dy *= -a.bounce
    end

    a.dx *= (1 - a.friction)
    a.dy *= (1 - a.friction)

    --[[
    a.frame += abs(a.dx) * 4
    a.frame += abs(a.dx) * 4
    ]]--

    -- a.t += 1
end

-- colliding with wall or actor
function solid_a(a, dx, dy)
    if solid_area(a.x+dx, a.y+dy, a.w, a.h) then
        found_col = true
        return true
    end
    local actor_collision = solid_actor(a, dx, dy)
    found_col = actor_collision
    return actor_collision
end

-- check if rect overlaps with walls
function solid_area(x,y,w,h)
    return solid(x-w,y-h) or
           solid(x+w,y-h) or
           solid(x-w,y+h) or
           solid(x+w,y+h)
end

function solid(x, y)
    val = mget(x,y)
    return fget(val, 1)
end

function solid_actor(a, dx, dy)
    for a2 in all(actors) do
        if a2 != a then
            local x=(a.x+dx) - a2.x
            local y=(a.y+dy) - a2.y

            if ((abs(x) < (a.w+a2.w)) and (abs(y) < (a.h+a2.h))) then
                -- o.g. comment
                -- moving together? this allows actors to overlap
                -- initially without sticking together

                -- along x axis
                if (dx != 0 and abs(x) < abs(a.x-a2.x)) then
                    v = abs(a.dx) > abs(a2.dx) and a.dx or a2.dx
                    a.dx, a2.dx = v,v

                    local ca = collide_event(a, a2) or collide_event(a2,a)
                    return not ca
                end

                -- along y ayis
                if (dy != 0 and abs(y) < abs(a.y-a2.y)) then
                    v = abs(a.dy) > abs(a2.dy) and a.dy or a2.dy
                    a.dy, a2.dy = v,v

                    local ca = collide_event(a, a2) or collide_event(a2,a)
                    return not ca
                end
            end
        end
    end

    return false
end

function collide_event(a1, a2)
    -- if collecting an item or something return true
    -- but this doesn't exist yet
    return false
end


__gfx__
0000000005555550088888800555555005555550cccccccc00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000005555550088888800575575005555550cccccccc00000000000000000000000000000000000000000000000000000000000000000000000000000000
0070070005555550088888800555555005555550cccccccc00000000000000000000000000000000000000000000000000000000000000000000000000000000
0007700005755750087887800055500000555000cccccccc00000000000000000000000000000000000000000000000000000000000000000000000000000000
0007700005555550088888800055500000555000cccccccc00000000000000000000000000000000000000000000000000000000000000000000000000000000
0070070000555500008888000500050005000500cccccccc00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000500500008008000050500000505000cccccccc00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000500500008008000000000000000000cccccccc00000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0002020000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0505050505050505050505050505050505050505050505050505050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0500000000000000000000000005000000000000000000000000050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0500000000000000000000000005000000000000000000000000050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0500000000000000000000000005000000000000000000000000050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0500000000000000000000000005000000000000000000000000050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0500000000000000000000000005000000000000000000000000050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0500000000000000000000000005000000000000000000000000050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0500000000000000000000000005000000000000000000000000050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0500000000000000000000000005000000000000000000000000050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0500000000000000000000000005000000000000000000000000050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0500000000000000000000000005000000000000000000000000050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0500000000000000000000000005000000000000000000000000050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0500000000000000000000000005000000000000000000000000050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0500000000000000000000000005000000000000000000000000050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0500000000000000000000000005000000000000000000000000050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0505050505050505050505050505050505050505050505050505050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
00010000261501815024150181502315018150230501805023050180502415018050260501805028050180502605018050240501805023050186500c650240502305018050266501865024650180502805018050
001000000c45028450000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__music__
04 01424344

